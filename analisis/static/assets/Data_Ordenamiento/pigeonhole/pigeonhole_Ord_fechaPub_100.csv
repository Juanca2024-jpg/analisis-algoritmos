0,1,2,3
A Computational Thinking Obstacle Course Based on Bebras Tasks for K-12 Schools,"Lehtim\""{a}ki, Taina and Monahan, Rosemary and Mooney, Aidan and Casey, Kevin and Naughton, Thomas J.",2023,"This paper describes an unplugged computational thinking (CT) resource for primary and secondary schools developed from Bebras tasks. In Ireland, CT is not part of the primary school curriculum or mandatory in secondary schools. However, the National Council for Curriculum and Assessment is in the process of revising the primary school curriculum to include aspects of CT. Our aim for creating this CT Obstacle Course is to introduce teachers (and pupils) without formal computer science training to the subject of CT. This is done in a manner that informs and motivates, and gives them the confidence to deliver CT materials in the classroom. We also want to find out from teachers how useful and important this type of resource is for developing problem-solving skills, and if our unplugged activity can support learning at various skill levels. Our CT Obstacle Course includes 14 Bebras tasks for primary schools and an additional 6 Bebras tasks for secondary schools. The activity is suitable for indoors and outdoors and is completed in groups, promoting teamwork and communication. We have delivered it to 146 primary school classes during 38 school visits between May 2021 and June 2022. It has been undertaken by 3,445 pupils and 195 teachers and other school staff. This paper describes our CT resource in detail, and reports teacher feedback from primary schools."
A Computational Thinking Test for Senior High School Students,"Hu, Chiu-Fan and Wu, Cheng-Chih",2023,"We have developed a quantitative tool for assessing senior high school students' computational thinking skills and administered it in the Taipei metropolitan area of Taiwan. Our CT test is language/tool/knowledge-independent and focuses on four key CT concepts: decomposition, data representation, algorithms, and pattern generalization. Our paper outlines the development process of the CT test, including its constructs, reliability, and validity, and discusses its educational implications for computing courses. This CT test provides a valuable resource for computing teachers who wish to assess their students' CT abilities and tailor their teaching methods accordingly."
An empirical study on the design-based STEM + VR teaching approach to cultivate college students' computational thinking,"Li, Xing and Zhao, MingYue and Ai, Di and Zhou, XiaoChun and Xiang, Hui",2024,"Virtual reality (VR) technology has been widely used in many industries. Therefore, the cultivation of virtual reality technology talents is imminent. However, there are relatively few universities that carry out virtual reality courses. At the same time, the virtual reality course is a good carrier to cultivate computational thinking. It can improve students ' problem-solving ability, creativity and teamwork ability, which are also necessary to cultivate computational thinking. Computational thinking, as a necessary basic skill for talents in the 21 st century, needs to be improved in the training approach of college teaching. However, there are relatively few teaching approachs to cultivate computational thinking through virtual reality (VR) courses. Based on this, this study constructs a design-based STEM+VR teaching approach, which combines the interdisciplinary knowledge of STEM education with VR subject knowledge, aiming to cultivate college students ' computational thinking through virtual reality courses. In this study, a single group of pre-test and post-test experiments were conducted to investigate the complex ability of computational thinking of a college student in Wuhan, including five sub-dimensions:creativity,algorithmic hinking, collaborative ability, critical thinking and dimensional problem solving.The research shows that after the design-based STEM + VR teaching, the abilities in the sub-dimension of computational thinking are significantly improved. The design-based STEM + VR teaching case provided in this study is expected to provide some reference for the use of virtual reality courses to cultivate computational thinking in college education."
An Intelligent Pedagogical Agent for In-The-Wild Interaction in an Open-Ended Learning Environment for Computational Thinking,"Murali, Rohit and Lall\'{e}, S\'{e}bastien and Conati, Cristina",2024,"Adaptive support can help learners in Open-Ended Learning Environments (OELEs), where the free-form nature of the interaction can be confusing to students. In this paper, we design and evaluate an Intelligent Pedagogical Agent (IPA) for an OELE designed to foster Computational Thinking (CT). Specifically, we design help interventions for an in-the-wild scenario where students interact with the OELE in an unmonitored, self-directed manner. We build a student model by extracting meaningful student behaviors on real-world interaction data obtained during interaction in online classrooms and including expert insights. We show that these student models perform better than a baseline and have the potential for adaptive support in self-directed interaction with the OELE. We design an IPA with the help of teachers, leveraging the student behaviors extracted from data. Lastly, we get insights into the value of these help interventions by empirically evaluating the IPA in a formal user study."
Analyzing Computational Thinking Gameplay: Identifying Struggles and the Role of Experience,"Veng, Sotheara and Zhang, Yifan and Bergwall, Ekaterina and Rutherford, Teomara",2025,"Computational thinking (CT) skills are essential for navigating daily life, but how best to teach these skills is still being explored. Educational programming games can provide engaging environments to develop CT, yet uncovering student struggles during gameplay remains challenging. This study analyzed 15 undergraduates with varying programming experience playing the CT game, Fox and Field, utilizing gameplay videos, heart rate data, and surveys. Results revealed common struggle points in understanding the character's perspective, degree angles, and debugging, with notable differences between novice and experienced players. Findings suggest support targeting abstraction, pattern recognition, and debugging skills to improve future game design and scaffolding."
Analyzing-Evaluating-Creating: Assessing Computational Thinking and Problem Solving in Visual Programming Domains,"Ghosh, Ahana and Malva, Liina and Singla, Adish",2024,"Computational thinking (CT) and problem-solving skills are increasingly integrated into K-8 school curricula worldwide. Consequently, there is a growing need to develop reliable assessments for measuring students' proficiency in these skills. Recent works have proposed tests for assessing these skills across various CT concepts and practices, in particular, based on multi-choice items enabling psychometric validation and usage in large-scale studies. Despite their practical relevance, these tests are limited in how they measure students' computational creativity, a crucial ability when applying CT and problem solving in real-world settings. In our work, we have developed ACE, a novel test focusing on the three higher cognitive levels in Bloom's Taxonomy, i.e., Analyze, Evaluate, and Create. ACE comprises a diverse set of 7x3 multi-choice items spanning these three levels, grounded in elementary block-based visual programming. We evaluate the psychometric properties of ACE through a study conducted with 371 students in grades 3-7 from 10 schools. Based on several psychometric analysis frameworks, our results confirm the reliability and validity of ACE. Our study also shows a positive correlation between students' performance on ACE and performance on Hour of Code: Maze Challenge by Code.org."
Appalachian Ingenuity and the Need for Rurally Sustaining Computational Thinking Pathways,"Dunbar, Kyle M. and Coenraad, Merijke and Iwatani, Emi",2024,"Our research-practice partnership with two school districts in Eastern Kentucky has created a rurally sustaining computational thinking (CT) pathway. In this paper we share our project's operational understanding of the concept of rural sustainability in the context of CT pathways. We posit that an effective CT pathway for rural communities must be firmly rooted in their cultural wealth, funds of knowledge, and socioeconomic priorities. Moreover, it should empower students to draw upon their own innovation heritage, leveraging CT as a tool to identify and address community challenges. Emphasizing the necessity of incorporating rural contexts into discussions on equitable access to computing education, our conceptualization provides insights into how policy and research can contribute to this important goal."
Applying a Blended Board Game System with Robotic Arm for Training Computational Thinking: Learning through Human-Machine Competition,"Yong, Lin and Zhan, Zehui and Zou, Xuanxuan and Chen, Li and Lin, Zhihang and Zhan, Weiyu",2023,"The purpose of this study is to design and developed a blended board game system with robotic arm for training students' computational thinking, and examine its effect in an elementary school's information technology course. A board game virtual interface was developed based on Unity-3D, and the corresponding device with a robotic arm was set up based on ESP32-CAM development board. The learning system enables a dual interaction mechanism by learning through Human-Machine Competition virtually or physically. By participating in the game, students faced challenges such as board game step reasoning, model abstract, decision-making, and strategic planning, thereby enhancing their computational thinking and problem-solving skills. Results indicated that the blended board game improve students’ overall computational thinking skills, especially reasoning, decision-making and strategic planning. This research provides an innovative approach to develop virtual-physical integrated game-based learning system for promoting students' computational thinking through human-machine competition."
Assessing Elementary Teachers' Knowledge of Integrated Computational Thinking,"Joshi, Deepti and Joswick, Candace and Albert, Jennifer and Jocius, Robin and Blanton, Melanie and Petrulis, Robert and Dawson, Trent",2025,"During the UnboxingCT project summer professional development, the Integrated CT Assessment was piloted with 72 elementary teachers. The assessment is based on computational thinking integration literature and asks teachers to identify different computational thinking concepts in content area scenarios. The assessment allowed us to identify which computational thinking concepts teachers were most familiar with prior to the professional development and assess changes in their understanding following the professional development. Our next step will be validation of the assessment with a larger group of teachers."
Assessing Pre-Service Elementary Science Education Teachers’ Professional Knowledge in the Field of Computational Thinking,"Arndt, Nicolas and Br\""{u}ckmann, Maja",2023,"Computational thinking is a key competence for children to learn in today’s digitized world. In order to effectively teach computational thinking, elementary science teachers need to have appropriate professional knowledge, consisting of content as well as pedagogical content knowledge and pedagogical knowledge [15]. This research project will adapt the Computational Thinking Test (CTt) to assess German pre-service teachers’ content knowledge in the area of computational thinking, and develop corresponding items based on case vignettes to assess pedagogical content knowledge."
Best Practices for Developing Computational Thinking,"Garcia, Dan and Garcha, Sonia and Mukund, Madhavan and Shah, Vipul",2023,"CSforALL is an umbrella term for a movement that seeks to bring engaging, culturally-relevant, and meaningful computer science to all students. It includes many avenues for learning – after-school outreach activities, once-a-year ''Hour of Code'' activities as well as formalized instruction in classes, led by an inspiring and well-prepared teacher. There is a perennial need to support pre-service and in-service teachers with curricula and pedagogical content knowledge (PCK) so they can be successful in the classroom, but where to start?Jeannette Wing has long evangelized computational thinking (CT) as a skill ''for everyone, everywhere. Computational thinking will be a reality when it is so integral to human endeavors it disappears as an explicit philosophy''. [2] We have found that CT offers a remarkable foundation of engagement, intuition, and grounding upon which to build higher-level computer science fluency. This panel brings together four seasoned experts who have collectively provided computer science and CT professional development to a vast multitude of teachers and students to share their best practices."
Beyond Programming: A Computer-Based Assessment of Computational Thinking Competency,"Lai, Rina P. Y.",2021,"Computational Thinking (CT), entailing both domain-general and domain-specific skills, is a competency fundamental to computing education and beyond. However, as a cross-domain competency, appropriate assessment design and method remain equivocal. Indeed, the majority of the existing assessments have a predominant focus on measuring programming proficiency and neglecting other contexts in which CT can also be manifested. To broaden the promotion and practice of CT, it is necessary to integrate diverse problem types and item formats using a competency-based assessment method to measure CT. Taking a psychometric approach, this article evaluates a novel computer-based assessment of CT competency, Computational Thinking Challenge. The assessment was administered to 119 British upper secondary school students (M = 16.11; SD = 1.19) with a range of prior programming experiences. Results from several reliability analyses, a convergent validity analysis, and a Rasch analysis, provided evidence to support the quality of the assessment. Taken together, the study demonstrated the feasibility to expand from traditional assessment methods to integrating multiple contexts, problem types, and item formats in measuring CT competency in a comprehensive manner."
Bridging the Gap: Computational Thinking as a Pathway to Equitable Math Education for Neurodiverse Learners,"Kastelein, Kate and Dawson, Kelsie and Tate, Rhonda",2024,"Students who receive special services in mathematics or neurodiverse learners (NDLs) deserve to learn mathematics at a rigorous and equitable level as their peers. Yet, many of these students are not reaching proficiency. Computational thinking (CT) may function as a bridge between students' mathematical learning and their everyday lives. We argue that computational thinking is a pathway for NDLs to follow that will bridge the connections between math instruction and the real-life problems with which NDLs are eager to engage. We identified the critical elements needed to support rural special educators' integration of CT into math instruction by identifying intersections between CT, Math, and the assets of NDLs, as well as barriers to implementation. By leveraging connections from an existing RPP (Research-Practice Partnership), which focuses on CS education and Business intersection in rural Maine schools, we created an opportunity for participatory research for special educators and paraprofessionals often overlooked in these processes. We employed a multi-method, design-based research (DBR) approach. Through observational, survey, and interview data, we found that 1) educators are not currently receiving support for integrating CT in special education classrooms, 2) activities piloted by our educators were well received by students, 3) current standards and Individualized Educational Plan (IEP) requirements for NDLs are a significant barrier to implementation. The need for expanded, regular PD for special educators is evident, as is the potential for CT as a bridge for mathematical understanding for NDLs."
Building Awareness of Computational Thinking Pathways across a Large School District,"Rangel, Alessandra and Coenraad, Merijke and Ruiz, Pati and Dunbar, Kyle and Milenkovic, Lisa and Arriola, Sheryl and Marousky, Annmargareth",2024,"As states move to adopt computer science (CS) and computational thinking (CT) standards to prepare students for an increasingly technological world, school districts are integrating curriculum with CT skills and practices, building the capacity of their teachers and administrators through professional development, and increasing the knowledge infrastructure to support CT opportunities for students. One challenge that districts face when scaling new initiatives occurs when the work becomes siloed to one ''champion'' teacher or a singular motivated department. This poster presents Broward County Public Schools' use of an interactive infographic to build awareness of their CT initiative, including considerations for utilizing an infographic tool and the design decisions made to engage various stakeholders. The poster provides examples of methods to build knowledge of an emerging initiative and adds to the growing body of work in supporting districts as they scale their CS/CT initiatives."
"Cartoonimator: A Low-cost, Paper-based Animation Kit for Computational Thinking","Ranjan, Krithik and Gyory, Peter and Rivera, Michael L and Do, Ellen Yi-Luen",2023,"Computational thinking has been identified as an important skill for children to learn in the 21st century, and many innovative kits and tools have been developed to integrate it into children’s learning. Yet, most solutions require the use of devices like computers or other expensive hardware, thus being inaccessible to low-income schools and communities. We present Cartoonimator, a low-cost, paper-based computational kit for children to create animations and engage with computational thinking. Cartoonimator requires only paper and a smartphone to use, offering an affordable learning experience. Children can draw the scenes and characters for their animation on the paper, which is printed with computer vision markers. We developed the mobile web app to provide an interface to capture keyframes and compile them into animations. In this paper, we describe the implementation and workflow of Cartoonimator, its deployment with children at a local STEAM event, and a planned evaluation for the kit."
"Champion, Collaborator, Curator, Anchor: Supporting K-12 Teachers to Integrate Computational Thinking","Coenraad, Merijke and Rangel, Alessandra and Burke, Quinn and Mills, Kelly and Ruiz, Pati and Dunbar, Kyle",2024,"Computational thinking (CT) provides opportunities for students to build the skills they need for everyday life, future academic success, and careers. Increasingly, districts are integrating CT into K-12 disciplinary subjects and a growing number of teachers need the knowledge to lead CT learning opportunities. CT is still nascent in teacher education, however, and not all teachers are receiving professional learning on the job. Teachers need effective methods of support to ensure they are providing students with high quality CT learning opportunities. We present methods of support for integrating CT into schools. The poster highlights four methods to support teacher professional learning: allowing ample time for collaboration, a school-based advocate championing CT integration, posting and promoting curated resources, and a foundational person anchoring the work as the initiative expands. In doing so, this poster provides interrelated examples of teacher support and highlights methods of continuous support for teachers integrating CT across content areas."
Collaborative Approaches for Effective and Sustainable Integration of Computational Thinking Educational Strategies,"Paludo, Giulia and Montresor, Alberto",2024,Sin Valor
Computational Thinking 2.0,"Tedre, Matti",2022,"Machine learning (ML) has triggered major changes across a great number of computing fields. People’s lives today are full of ML-driven services: eerily accurate recommendations, ability to automatically tag one’s friends in photos, and well working translation systems, for example. This keynote talk presents how ML technology upends the computational thinking (CT) consensus in computing education. It begins by presenting why and how a number of classical “CT1.0” concepts need to be re-thought for the “CT2.0” (machine learning) era, from control structures and problem-solving workflow, to correctness and notional machines. Based on a series of classroom interventions on teaching machine learning to middle schoolers, conducted by DIGS RC at University of Eastern Finland, the talk also presents how classroom pedagogy shifts between CT1.0 and CT2.0."
Computational Thinking and Attitudes Towards Computing: An Emerging Relationship in Elementary Students,"Ojeda-Ramirez, Santiago and Parker, Miranda C. and Garcia, Leiny and Tate, Tamara and Villa, Jillian Rae and Warschauer, Mark",2023,"This study analyzed the relationship between computational thinking (CT) and coding attitudes of upper elementary students after exposure to a year-long CT curriculum. Using ordinary least squares regression and controlling for student demographics (i.e., gender and English Learner (EL) status), we found that CT skills were a significant factor in modeling coding attitudes, regardless of demographic controls. Interviews of the students unveiled an interaction between coding interest and social values in a debugging process."
Computational Thinking and Notional Machines: The Missing Link,"Munasinghe, Bhagya and Bell, Tim and Robins, Anthony",2023,"In learning to program and understanding how a programming language controls a computer, learners develop both insights and misconceptions whilst their mental models are gradually refined. It is important that the learner is able to distinguish the different elements and roles of a computer (compiler, interpreter, memory, etc.), which novice programmers may find difficult to comprehend. Forming accurate mental models is one of the potential sources of difficulty inextricably linked to mastering computing concepts and processes, and for learning computer programming.It is common to use some form of representation (e.g., an abstract machine or a Computational Agent (CA)) to support technical or pedagogic explanations. The Notional Machine (NM) is a pedagogical device that entails one or more computational concepts, originally described as an idealised computer operating with the constructs of a particular programming language. It can be used to support specific or general learning goals and will typically have some concrete representation that can be referred to. Computational Thinking (CT), which is defined as a way of thinking that is used for [computational] problem solving, is often presented as using a CA to carry out information processing presented by a solution.In CT, where the typical goal is to produce an algorithm or a computer program, the CA seemingly serves a purpose very similar to an NM. Although it changes through the different stages of development (of the learner and of the curriculum), the roles of CAs and NMs can be seen as versatile tools that connect a learner’s mental model with the conceptual model of a program. In this article, we look at this relationship between CAs and NMs, and indicate how they would look at different stages of learning. We traverse the range of definitions and usages of these concepts, and articulate models that clarify how these are viewed in the literature. This includes exploring the nature of machines and agents, and how historical views of these relate to modern pedagogy for computation. We argue that the CA can be seen as an abstract, simplified variant of an NM that provides a useful perspective to the learner to support them to form robust mental models of NMs more efficiently and effectively. We propose that teaching programming should make use of the idea of a CA at different stages of learning, as a link that connects a learner’s mental model to a full NM."
Computational Thinking Assessment Tools: A Systematic Review of the Literature (Initial Findings).,"Sheridan, Frances and Stynes, Paul and Pathak, Pramod and Quille, Keith",2024,"Since Jeanette Wing’s influential 2006 article, research into developing Computational Thinking (CT) skills has surged. Despite ongoing debates about CT definitions and components, reliable and valid assessment tools are crucial for measuring CT skill impact and evaluating related interventions. This systematic literature review seeks to identify CT assessment tools suitable for undergraduate computing students, by investigating the central question ""What tools are available for the assessment of CT skills?"". A comprehensive search of academic databases for CT assessment publications since 2006 yielded 202 unique articles. After applying exclusion criteria, 72 relevant articles were analyzed. The selected publications were categorized by tool type, and focus, examining tool reliability and validity. This paper presents initial findings from this review."
Computational thinking for professionals,"Denning, Peter J. and Tedre, Matti",2021,Professionals practice a form of computational thinking that is significantly more advanced than popular descriptions suggest.
Computational Thinking for Self-Regulated Learning,"Pasterk, Stefan and Benke, Gertraud",2024,"In this theoretical paper, we compare computational thinking and self-regulated learning. Many studies use self-regulated learning to foster the acquisition of computational thinking competencies. Self-regulated learning skills are themselves beneficial for any learning process; here, we argue that the relationship between self-regulated learning and computational thinking is closer than the simple observation that self-regulated learning strategies support the acquisition of computational thinking competencies. We sustain that self-regulated learning and computational thinking competencies share many features (and have some differences), which would support synergistic effects so that not only can self-regulated learning be used to attain computational thinking competencies, but computational thinking activities can also be used to foster features of self-regulated learning competencies."
Computational Thinking in STEM Teaching: Preservice Teachers' Conceptualizations and Practices,"Wei, Wei and Ha, Jesse and Gomez, Kimberley and Ghosh, Anuradha",2024,"Within a two-year urban teacher residency program at [University], which focuses on training high school teachers to incorporate computational thinking (CT) into STEM education with an emphasis on equity, this study delves into how these preservice teaching residents (TRs) understood and applied CT in high school STEM settings. Based on our initial thematic content analysis of ten 30-minute artifact-based interviews, teachers' understanding and application of CT could be categorized in two ways: 1) One group of teachers showcased clear, explicit knowledge of CT and actively incorporated it into their instruction; 2) Another group, despite their evident understanding of CT, subtly and implicitly integrated CT into their teaching methods. Our findings suggest that while TRs may differ in whether they explicitly or implicitly integrated CT into their lesson plans, their comments suggest that they have foundational understandings and hold values that suggest they can build upon them. The TRs held definitional understandings of CT and had intentions to design and teach with CT integration, explicitly, or more commonly, implicitly. All of the TRs recognized opportunities in their lesson plans for teaching CT to students, which suggests the potential for more explicit integration in the future. These insights guide our subsequent efforts in teacher training, ensuring educators are equipped to weave CT into STEM lessons. Our findings contribute to a growing body of work that seeks to build strong preservice teaching practices, as they learn to translate CT knowledge into effective teaching practices while working towards higher levels of CT integration."
Computational Thinking Integration Design Principles in Humanities,"Caskurlu, Secil and Hu, Anne Drew and Yadav, Aman and Santo, Rafi",2022,"In this poster, we will present approaches and associated design principles for integrating computational thinking (CT) into middle school Social Studies, Arts, and Language Arts instruction to enhance disciplinary learning. We used four steps to identify these approaches and design principles: (1) co-design with teachers and experts in computer science and CT education to ideate CT-integrated lessons; (2) identifying initial design principles based on the ideated lessons; (3) consultation with subject matter experts; and (4) conducting a Delphi study with pedagogical experts (e.g., teachers, curriculum writers, teacher educators) to examine the clarity, feasibility and potential impact of the design principles. The process led to three broad approaches to integrate CT into Social Studies instruction that included 14 design principles, three for Arts with 16 design principles, and four for Language Arts with 12 design principles."
Computational Thinking Interventions in Higher Education: A Scoping Literature Review of Interventions Used to Teach Computational Thinking,"de Jong, Imke and Jeuring, Johan",2020,"Computational Thinking is seen as a crucial skill in an increasingly digital society. Researchers and educators in higher education therefore aim to improve the Computational Thinking (CT) skills of students using appropriate interventions. However, there is currently no overview of interventions used to teach CT and how effective they are. With this scoping literature review, we provide such an overview by identifying articles that discuss interventions used to teach CT in higher education. We identify the teaching approaches used in these interventions, and discuss their effectiveness and how this is assessed. Furthermore, we look at the use of adaptive interventions. Our search of three academic databases (Scopus, ACM and ERIC) resulted in 1839 articles. After screening, 49 articles remained. A detailed examination of the interventions discussed in these articles showed that CT is still often taught through programming assignments. The interventions are evaluated in a myriad of ways, making it difficult to compare the effectiveness of interventions. We therefore suggest making use of more standardized instruments to evaluate the effectiveness. Finally, although scaffolding is applied, interventions are not often adapted to the actual proficiency level of a student."
Computational Thinking on Mathematical Problem-Solving: Bibliometric Theme and Aspect,"Susanti, Reni Dwi and Lukito, Agung and Ekawati, Rooselyna",2024,"This study aims to investigate current trends and key elements of computational thinking in problem-solving within mathematics education. A systematic literature review was conducted using the 2013-2013 Scopus database, focusing on the keyword ""computational thinking in mathematics education"" for document collection. Data analysis was visualized using R-studio software. The thematic analysis revealed two major fields that extensively research computational thinking: education and engineering. Additionally, six research themes emerged from the analysis, including Mathematics, Computer Science, programming, STEM, robotics, and engineering. Key aspects for identifying computational thinking in solving mathematical problems encompass problem identification, decomposition, pattern recognition, abstraction, algorithms, and debugging."
Computational Thinking Resources Inspired by Bebras,"Lehtim\""{a}ki, Taina and Monahan, Rosemary and Mooney, Aidan and Casey, Kevin and Naughton, Thomas J.",2023,"In this poster, we highlight computational thinking resources for schools from the PACT team at Maynooth University, Ireland. The resources are derived from tasks from the Bebras international computational thinking initiative. The different modalities work together throughout the school year to provide initial exposure to computational thinking, and include an obstacle course, seasonal tasks, and a workbook."
Computational Thinking through Tangible Play: Understanding Social Dialogues in Children's Learning,"Liu, Yu-Yu and Iversen, Ole Sejer",2022,"Through an exploratory study of a 6-year-old child and his parents, we explored the complexities of children's affective learning experience with tangible programming games, specifically focusing on the impact of scaffolding dialogues and social-emotional support. The social dialogues from this exploratory study demonstrate the interactive reasoning process in computational thinking (CT) education and reveal that dialogic learning has the potential to promote learning emotions and CT skills development in CT education. This study thus points to the future Child-Computer Interaction (CCI) research agenda that considers social dialogues in CT education with tangible play. A new understanding of social dialogues in CT toys and CT education can provide educators and CCI researchers with socio-technical insights into the future educational practices and design of CT games and technology for young children."
Construction and Practice of Computational Thinking Structural Framework with Sternberg's Intellectual Education Theory,"Zhang, Wei and Song, Lingling and Huang, Xujun and Wang, Yi",2024,"Cultivating students' computational thinking skills is one of the important teaching goals of college computer courses, and constructing a scientific and effective structural framework for computational thinking is the basis for implementing computational thinking training. To this end, based on Sternberg's intelligence education theory, combined with software development and programming knowledge, a structural framework of computational thinking was constructed. Subsequently, a project-based teaching activity based on this framework to cultivate students' computational thinking skills was carried out in the college computer programming course ""Software Development Technology"". By measuring students' computational thinking skills before and after the activity, it was verified that the project-based teaching model based on the proposed framework had a significant effect on improving students' computational thinking skills. By constructing a structural framework of computational thinking that integrates the characteristics of disciplines, and taking programming teaching as a carrier to implement the cultivation of computational thinking skills, it can provide a new way for computer educators to cultivate students' computational thinking skills."
Construction and Validation of an Online Teaching Model for the Development of Computational Thinking: Take high school information technology course as an example,"Yang, Hairu and Li, Qiuhong and Dong, Jiamin and Bai, Xinye and Cai, Minghan and Xu, Xiang",2023,"In the information age, online teaching will gradually become an inevitable trend in the era of modern education informatization. Online teaching has the advantages of easy operation and abundant resources, but it has higher requirements for the design of teaching mode and teaching content. Computational thinking, as the core idea of IT teaching, emphasizes the long-term development and deep development of IT learning, which has great practical significance for students to improve themselves and cultivate their ability development. So in the online teaching of high school IT courses, how to build an online teaching mode suitable for students' development and achieve the purpose of effectively cultivating students' computational thinking? This study combines specific teaching, guided by constructivist theory, nearest developmental zone theory, situational cognition and other theories, and uses literature research method, questionnaire survey method, quasi-experimental research method and other research methods to conduct a study on the construction and validation of online teaching model of high school information technology geared to the cultivation of computational thinking. The results of the study showed that the proposed teaching model was found to have a significant promotion effect on students' academic performance and computational thinking through the examination of students' academic performance and computational thinking."
CT Readiness for All: Studying a Framework for Supporting Schoolwide Computational Thinking Integration Across Elementary Curricula,"Sherwood, Heather and Moeller, Babette and Fancsali, Cheri",2024,"Schools throughout the United States are engaging in efforts to integrate computational thinking (CT) across various elementary curricula. However, there is very little guidance for effective approaches to integrating CT consistently and cohesively school wide. CT Readiness for All is a two-year research project that is investigating a CT framework and self-assessment tool developed to articulate indicators associated with successful school-wide integration across elementary curricula. Data sources include focus group interviews and surveys with teachers. Although the project is still in progress, early analysis have resulted in three key findings: (a) students were able to make cross-curricular connections using CT as a problem-solving process; (b) finding time within the school day to focus on CT is challenging; and (c) administrators need to take an active role in setting the vision and definition of CT to support school-wide CT efforts."
Demo: Teaching computational thinking with Protobject,"Bellino, Alessio",2023,"In today’s rapidly changing world, computational thinking is becoming increasingly essential. However, many people, including middle and high school students, face obstacles when learning to code, such as a lack of motivation and engagement. To address this challenge, we present Protobject, an accessible tool that teaches programming in a unique and interactive way. Protobject allows people to explore programming concepts through hands-on physical computing, providing a more engaging and motivating learning experience. In this demonstration, we invite conference attendees to delve into the features of Protobject and witness its potential for enhancing programming education. Participants will have the chance to interact with the tool’s user-friendly interface and explore a range of 22 interactive learning activities that offer different levels of difficulty."
Design and Implementation of Co-design Pedagogical Scenarios for Learning Computational Thinking,"Sunday, Amos Oyelere",2023,"Recognizing effective approaches to communicate computational thinking (CT) ideas to K-12 learners is necessary. Co-design approach has been identified as an effective pedagogy for communicating CT ideas. However, there is a dearth of studies on co-design pedagogical scenarios. Hence, this study aimed at developing a CT learning co-design scenario, translate into artifact, and implement with Nigerian secondary school students."
Designing for Equity in Education Via Computational Thinking: A Case Study,"Yamaguchi, Ryoko and Eaton, Cyntrica",2024,"CADRE (Catalyst for Actively Designing and Researching Equity) is a Researcher-Practitioner Partnership (RPP) that empowers in-service K-12 educators to learn and leverage Computational Thinking (CT) to design for equity in their classrooms, schools, and districts. We cast equity gaps as bugs in education and focus on helping educators debug the system with CT-based tools, methods, and strategies such as user-centered design, system abstraction, and iteration. In this paper, we first describe how educators were taught CT and provide an example of how they applied these skills in practice. We then highlight the results of the qualitative case study of 34 educators where we found that CT helped CADRE participants gain a better understanding of the equity gaps their students faced and improve their instructional practices within their locus of control. Implications for future research are also discussed."
Designing Project-based learning experiences to integrate Computational Thinking skills at Teacher Colleges,"Simmonds, Jocelyn and Hitschfeld-Kahler, Nancy and Scheihing, Eliana and Henriquez, Valeria and Munoz, Valentin and Casanova, Cecilia and Torrent, Catalina and Contreras, Paulo and Mercado, Karen and Estrada, Daniel and Marquez, Lucia",2024,"We describe our experience introducing computational thinking skills at teacher colleges through project-based learning (PBL). We have designed projects that use technology to tackle driving questions derived from the national school curriculum, and at the same time are aligned with learning objectives from pre-service teacher training programs. We have carried out a preliminary validation of these projects with teacher educators, who are now incorporating these experiences into their courses with pre-service teachers."
Developing a Digital Game to Assess Lower Primary Students' Computational Thinking Practices based on Evidence-Centered Game Design,"Luo, Qi and Zhang, Shuhan",2025,"Computational Thinking (CT) has become increasingly essential in the current era of rapid digital advancement. Despite the availability of various tools to assess CT, there is a notable scarcity of tools designed for evaluating CT practices in lower elementary students. To address this gap, this study develops a digital game titled ""Magical Adventure"" based on the Evidence-Centered Game Design (ECGD) framework, which aimed at assessing the CT practices of young children. The game comprises five scenarios, targeting five CT practices respectively, including pattern recognition, abstraction, problem decomposition, algorithmic thinking, and debugging. Scoring criteria were designed to evaluate students' CT abilities based on the anticipated gameplay process data. This study describes the design and development process of the game. Future steps will include validation of its effectiveness through expert reviews and cognitive interviews, followed by empirical research to optimize and refine the game, enhancing its accuracy in reflecting students' CT practices."
Developing a Self-efficacy Scale for Computational Thinking (CT-SES),"De Jong, Imke and Jeuring, Johan",2022,"Self-efficacy is an important construct in education, as it can influence (among other aspects) perseverance, engagement and success on educational tasks. As such, a student’s Computational Thinking (CT) self-efficacy can have an important influence on, and may be a predictor for, the development and use of CT skills. This poster abstract provides the details of an in-progress study in which we develop a scale to measure CT self-efficacy in different contexts."
Developing Computational Thinking in Middle School Music Technology Classrooms,"McCall, Lauren and Allen, Brittney and Freeman, Jason and Garrett, Stephen and Grossman, Sabrina and Paz, Jed and Edwards, Doug and McKlin, Tom and Lee, Taneisha",2024,"To engage diverse populations of students who may not self-select into computing courses, a curriculum for a middle school music technology + computer science course that addresses learning standards for both subjects was developed and deployed. Students who engage with the curriculum learn modern music production techniques and computational thinking concepts. This is through a mix of traditional approaches to music technology education (digital audio workstations) and computational approaches via a culturally relevant learning platform that introduces students to coding through music production and remixing. This poster reflects on the last two years of curriculum design and deployment, teacher training, and student and educator engagement and feedback to provide insight into the teaching (and learning) of computational thinking in the music technology classroom."
Development of an Open-Source Emotion-Based Adaptive Learning Support System using Computational Thinking Activities,"Herrero-\'{A}lvarez, Rafael",2023,This report summarizes the information related to a PhD project that aims to develop an Open-Source Emotion-Based Adaptive Learning Support System through Computational Thinking activities. This paper outlines the proposed objectives and provides an update on the progress made in research to date.
Does Musical Context Improve Computational Thinking Skills?,"Padhye, Harsh and Gibson, Rachel and Bull, Glen and Nguyen, N. Rich",2023,"The Make-To-Learn Lab at the University of Virginia developed TuneScope, a tool to facilitate computational thinking (CT) through music, to help democratize computer science education. Built upon the existing framework of Snap! (University of California, Berkeley), TuneScope leverages sound analysis, design, and music composition to engage novices with CT fundamentals. Existing research shows the benefits of using familiar contexts to teach CT, and TuneScope builds upon this with musical contexts. We have designed a course centered around the use of TuneScope to teach fundamentals of CT through music. In this paper, we investigate how students use TuneScope to develop sequential melodies, build chords, and sample recorded sounds while simultaneously learning fundamental programming principles such as algorithm design and abstraction. Using sentiment analysis, we demonstrate that students have had a largely positive experience in learning and grasping CT fundamentals throughout a diverse curriculum. As of today, the total enrollment of the course consists of over 45% female students with a 100% retention rate. TuneScope has also been accepted as an official Snap! library to be used by thousands of Snap! users worldwide."
Embracing Mathematical Conjecture Through Coding and Computational Thinking,"Castle, Sarah D.",2024,"Mathematics and computer science education have an intertwined history as proof undergirds both disciplines. This initial instrumental case study follows 16 different computational science students through a series of 8 linear algebra modules. Thematic analysis was used to highlight that when students learn mathematics through computation, opportunities for conjecture can be fostered alongside computational thinking."
Encouraging the Development of Computational Thinking Skills through Structured Dance Activities (Discussion Paper),"Fairlie, Fiona",2024,"This paper investigates whether aspects of structured dance and choreography may improve cognitive skills related to computational thinking. It also explores the relationship between performance on computational thinking tasks and motivation. Twenty participants,aged between 7 and 9 years old, undertook the Beginners Computational Thinking Test (BCTt) as a pre-test, took part in three dance related workshops then completed the BCTt as post-test and responded to an adapted version of the Intrinsic Motivation Inventory (IMI). Student performance on the BCTt improved significantly from pre-test to post-test for both boys and girls and seems generalised across the computational categories measured by BCTt. The study did not show a correlation between performance and motivation in girls but suggests that there may be some correlation between improvement in score and reported enjoyment in boys."
"Enhancing Computational Thinking with 3D printing: Imagining, designing, and printing 3D objects to solve real-world problems.","Grizioti, Marianthi and Kynigos, Chronis and Nikolaou, Maria-Stella",2024,"Printing 3D objects is exciting and engaging for young learners. However, how can this emerging technology benefit the development of skills, such as Computational Thinking (CT) and Design Thinking (DT), through a meaningful process of imagining, designing and tinkering with objects that could be used in real-world problems? Our knowledge is still limited, due to the complexity of designing 3D printable models from scratch with the existing digital tools. This paper discusses a web-based tool that enables learners to create and dynamically manipulate the behavior and properties of 3D printable models with high-level programming. This design aims to foster computational thinking, creativity, and design thinking skills as it focuses on the design process of the model, its behavior and its usage after printing. It also presents the results of a pilot study in which secondary school students engaged in a Design Thinking project for designing and printing sustainable everyday objects using this design. The study revealed new kinds of educational potential of 3D printing including the understanding of complex mathematical and CT ideas that were too complicated before, and the connection of CT practices with real-world problems through the implementation of a Design Thinking project with digital media."
Enhancing the Role of Computational Thinking in Primary and Secondary Education in Switzerland,"Arnold, Ruedi and Amstalden, Barbara and Bader, J\""{o}rg",2022,"Computational Thinking (CT) is a fundamental and important skill set in our world and should therefore be taught and practiced in school. In this poster abstract, we present our ongoing initiative on establishing CT as a fundamental and interdisciplinary contribution of Computer Science as a necessary component of general education and describe our aim to enhance the knowledge about it in Switzerland’s teacher communities. We give an outline of our planned activities and present first results from a field test in a Swiss high school with an original example of CT-tailored teaching material for the subject of logic."
Examining the Use of Computational Thinking Skills When Solving Bebras Tasks,"De Jong, Imke and Sichterman, Bo and Jeuring, Johan",2022,"Computational thinking (CT) is considered an essential problem-solving skill in the 21st century, and is receiving attention on different educational levels. To promote and assess students’ CT skills, so-called ’Bebras tasks’ (i.e. small tasks for problem solving in informatics) are created by experts in the field of CT. There has not been empirical research to determine to what extent and how CT skills are used while solving these tasks, however. This qualitative study bridges this gap by using the think-aloud method to examine the use of CT skills when solving Bebras. The results of this study can serve as a validation for the use of CT skills in solving Bebras tasks. This poster abstract introduces the background and setup of the study."
Examples of Culturally Responsive Teaching in Computational Thinking Curriculum,"Saito-Stehberger, Dana",2022,"Culturally Responsive Teaching (CRT) is a pedagogical strategy that aims to engage culturally and linguistically diverse students in the classroom, to validate and to empower them (Scott, Sheridan, &amp; Clark, 2014; Gay, 2010). Five commonly described aspects of culturally responsive instruction include: (1) helping students to value the perspectives of others, (2) affirming a sense of belonging, (3) validating students' cultural identities, (4) educating students about the diversity of the world around them,&nbsp; (5) supporting students to develop an awareness the impactful social structures.&nbsp; Research has shown repeatedly that CRT increases the academic success of ethnically diverse communities&nbsp; (Gay, 2018; Ladson-Billings, 1995). This talk will provide examples of how CRT has been incorporated into a Scratch-based, upper-elementary computational thinking curriculum that was developed specifically for English language learners. Learning activities include cultural content, diverse role models in the computer science field, and student reflection."
Exploring Computational Thinking Practices and Gestures in the Context of Matrix Math,"Zaman, Ulia",2023,Computational thinking (CT) is a unique skill set that can provide advantages not only in the field of computer science (CS) but also in other disciplines. There is potential benefit in incorporating CT practices in other subjects so students from interdisciplinary backgrounds can also gain CT skills and apply them in their respective disciplines. This study takes a look at how students from interdisciplinary backgrounds interact using gestures and use CT to understand matrix math concepts in a group setting. A mixed-methods analysis is used to gain insight into how students’ practice CT. Data collected from pre- and post- assessments measures students’ mastery level in matrix math concepts. Video data collected during the group activity shows students’ learning process. The results of this study provide a better perspective on how other disciplines are able to utilize CT and how CT learning can be implicitly taught in subjects other than CS.
Exploring Computational Thinking with Physical Play through Design,"Yu, Junnan and Hayden, Ronni and Roque, Ricarose",2023,"Physical play has often been leveraged to provide children with active and engaging learning experiences. However, coding activities are predominantly sedentary in front of the screen, and the application of physical play in Computer Science education is less explored, e.g., how can we engage in computational thinking (CT) through physical play? In this design-based exploration, we conducted three design activities where young children, college students, and researchers were invited to create physical play projects using the BBC micro:bit and reflect on their experiences. By examining participants’ projects and creating processes, we provide empirical evidence that remixing physical play activities with coding can engage learners in various CT concepts and practices, reveal how CT concepts and practices can be represented in physical play, and highlight implications for designing physical play-mediated computational learning experiences. Ultimately, we encourage more learning experiences to incorporate physical play into computing education for children."
Exploring Teachers’ PCK for Computational Thinking in Context,"Yeni, Sabiha and Grgurina, Natasa and Hermans, Felienne and Tolboom, Jos and Barendsen, Erik",2021,"There is growing attention for integrating Computational Thinking (CT) into various subjects across the K-12 curriculum with a concomitant increase of interest in investigating teachers’ pedagogical content knowledge (PCK) regarding CT. This study is part of a bigger project focusing on defining the learning trajectories for CT integration into the K-12 curriculum. In particular, the present study focused on eliciting the pedagogical content knowledge and attitude of teachers with respect to the integration of CT in various disciplines. To this end, we implemented six different case studies by integrating CT into six different subjects: science, traffic, language, biology, geography, and physics. Two primary and four secondary school teachers were involved in the study. After the lesson series was completed in schools, we conducted interviews with teachers to understand their PCK on CT integration, attitudes toward CT integrated lessons, and the barriers teachers faced during CT integrated lessons. Our results indicate that compared to standard instructional activities, students can go deeper and understand the subject content better in CT integrated lessons, also students can use the power of digital technologies to solve subject-related problems. On the other hand, teachers pointed out that students and teachers need to be more capable of technical knowledge and skills to accomplish tasks."
Factors That Predict K-12 Teachers' Ability to Apply Computational Thinking Skills,"Tagare, Deepti",2024,"Background and Objective. Teacher assessment research suggests that teachers have good conceptual understanding of CT. However, to model CT-based problem-solving in their classrooms, teachers need to develop the ability to recognize when and how to apply CT skills. Does existing professional development (PD) equip teachers to know when and how to apply CT skills? What factors should PD providers consider while developing trainings for CT application skills?Method. This retrospective observational study used a binomial regression model to determine what factors predict teachers’ probability of performing well on a CT application skills test.Participants. Participants of this study were 129 in-service K-12 teachers from a community of practice in India.Findings. Results show that teachers who have received at least one CT training, who have a higher teaching experience, and are currently teaching CT will have a higher probability of applying CT skills correctly to problems irrespective of the subject they teach and their educational backgrounds. However, receiving a higher number of CT PD trainings was a negative predictor of teachers’ performance.Implications. Implications for school administrators, professional development providers, and researchers are discussed. Teachers need ample opportunity to teach CT in their teaching schedules. Continuous professional development does not necessarily result in improved CT application skills unless careful consideration is given to the pedagogies used and to the resolution of misconceptions that teachers may have developed in prior training. Mixing plugged and unplugged pedagogical approaches may be beneficial to encourage transfer of CT application skills across different types of problems. Last, there is a need to develop valid and reliable instruments that measure CT application skills of teachers."
From Embodied Doing to Computational Thinking in Kindergarten: A Punctuated Motor Control Model,"Sinha, Ravi and Swanson, Hillary and Clarke-Midura, Jody and Shumway, Jessica F. and Lee, Victor R. and Chandrasekharan, Sanjay",2023,"We propose a motor control-based characterization of how computational thinking (CT) can emerge from embodied performance. The account is based on children's activity during a tangible coding task, and a mechanism proposed by cognitive and motor neuroscience studies. For the task, the child used navigational symbols (forward, backward, rotate right, rotate left) to program the movements of a tangible robot on a 2-D grid. We propose that the development of CT through this task can be understood in terms of “tool incorporation into the body schema.” To illustrate the proposed mechanism, we use video data from one of three teaching sessions, where a group of four kindergartners learned to code using Cubetto (a tactile screen-free grid-based robotic toy). We argue that learning the task (i.e. being able to control Cubetto to perform goal-oriented movements) is challenging because the CT task requires learners to bridge three distinct discontinuities (spatial, temporal, and representational), to achieve control over the robot. We hypothesize that learners and facilitators are likely to engage in moves (both epistemic and pedagogical) that help bridge these gaps, and thus support the incorporation of the robot and its controller into the body schema. We characterize two such moves and explicate how they might support the incorporation process. The study is part of a larger program of design-based research aimed at helping young children develop CT."
Gamified Virtual Reality for Computational Thinking,"Gerini, Lorenzo and Delzanno, Giorgio and Guerrini, Giovanna and Solari, Fabio and Chessa, Manuela",2023,"In Computer Science Education, coding activities are extremely important to teach younger students the basics of programming and computational thinking. To provide an immersive experience, in this paper, we propose VRCoding, a Virtual Reality (VR)-based block coding system. VRCoding can teach computational thinking in an immersive Virtual Reality environment, exploiting passive haptics to improve interaction and give tactile feedback to the users. Passive haptics is obtained using simple physics placeholders, i.e., textured parallelepipeds, that are tracked in real-time, and aligned with the coding blocks in VR.  
The system is tested on a group of secondary school users, performing simple coding exercises with a standard monitor-based block coding environment and with the proposed VRCoding block language. Results show positive feedback concerning the sense of presence and the user experience."
Gender Characteristics and Computational Thinking in Scratch,"Niousha, Rose and Saito, Daisuke and Washizaki, Hironori and Fukazawa, Yoshiaki",2023,"This study investigates the Computational Thinking skill differences among novice programmers in relation to gender. Block-based visual programming languages such as Scratch particularly benefit K-12 programmers because they learn how to code intuitively. Our study analyzed 124 (62 males, 62 females) Scratch projects on the Scratch website, categorized projects on the basis of each user's gender and project type, and compared their Computational Thinking scores. The results of this study suggest that project types preferred by males require more programming construct reflected in the Computational Thinking score than that of females. Because gender differences appear by project type, project type presumably influences the gender gap in scores."
"Geo-Computational Thinking in the Third Grade: Making Computational Thinking Truly ""For Everyone, Everywhere""","Hammond, Thomas C. and Oltman, Julia and Manfra, Meghan M.",2019,"The concept of computational thinking originated in the computer science community and has therefore focused on concepts and terminology drawn from that discipline. However, to make computational thinking an integrated, accessible concept within other parts of the K-12 curriculum, the concepts and terminology must be adapted to fit the new curricular context. We focus on elementary social studies, specifically a third grade geography lesson on absolute location using a teaching strategy of a scaffolded geocache. We present a selection of computational thinking elements, adapt them to social studies, and then organize them into a four-part heuristic: Data, Patterns, Rules, and Questions. Through this selection, adaptation, and sequencing, computational thinking can become a relevant and accessible integrated concept within the elementary social studies curriculum."
How is Computational Thinking Defined in Elementary Science?,"Pietros, Jennifer and Sweetman, Sara and Shim, Minsuk",2022,"Computational thinking (CT) is a foundational skill of computer science that all elementary students should have equitable access to for learning and engaging in throughout their day. For the integration of CT into science instruction to be successful, teachers need to be able to communicate clearly what CT is and how it is defined through precise language. The intention of this poster is to explore the meaning of CT at the elementary level through a critical review of literature, analysis of standards, value-mapping across multiple stakeholders, analysis of written responses from elementary teachers on a CT survey, and deep discussions of a Design-Based Implementation Research Team (DBIR). The data collected and analyzed from these sources was combined to develop a definition of CT that would support implementation of CT for elementary teachers."
Improvement of Computational Thinking skills through unplugged activities in Upper Secondary Education,"Benavides-Escola, Christian Andr\'{e}s and Mart\'{\i}n-Barroso, Estefan\'{\i}a and Zapata-C\'{a}ceres, Mar\'{\i}a and Rom\'{a}n-Gonz\'{a}lez, Marcos",2024,"The adoption of Computational Thinking (CT) in the educational worldwide curricula is progressively gaining importance from various perspectives. One particular approach, known as unplugged, does not require electronic devices and offers notable benefits as it is replicable and adaptable. Moreover, it serves to dismantle the misconception that computer science is exclusively confined to the digital realm. While both plugged and unplugged methodologies are recognized, further exploration of the unplugged approach is required, especially in Upper Secondary Education, where there is less evidence of its effectiveness. This paper presents a summary of a quasi-experimental study conducted with 11th grade students (approximately 16 years old) in a Spanish public high school. 57 students participated: 28 in the control group and 29 in the experimental group. The conducted research, based on a quantitative and experimental design, aimed to investigate the effectiveness of unplugged activities to improve CT abilities in Upper Secondary Education. The results indicated improved skills in the experimental group, suggesting the potential efficacy of unplugged methods in fostering CT abilities."
Improving Computational Thinking with Spatial Skills Development in Primary School,"Parkinson, Jack",2023,"Spatial skills frequently correlate with many measures of computing success, and indeed with wider STEM achievement. Spatial skills training has also been shown to improve computing outcomes at multiple institutions of higher education with first-year university students. However, there is a good chance that even though we can improve the spatial skills of undergraduate students to help them succeed at computing, many students will have already opted-out of computing learning pathways in school due to poor spatial skills. Using a spatialised maths curriculum, we intend to improve the spatial skills of primary school children aged 8–9 and investigate the effect on their computational thinking. With this poster, we would like to share our work so that others can consider deploying similar programmes, and to hear feedback from the CS education community on what other aspects and factors we should consider."
Inclusive Computational Thinking in Public Schools: A Case Study from Lisbon,"Pires, Ana Cristina and Rocha, Filipa and Guerreiro, Tiago and Nicolau, Hugo",2024,Sin Valor
Infusing Computational Thinking into a Computer Science Gateway Course,"Benkarroum, Younes and Azhar, Mohammad Q.",2024,"Computational thinking (CT) stands as a universal problem-solving approach applicable across diverse disciplines, transcending the domain of computer science. It embodies the mental process of structuring a problem to enable a computational solution feasible for both humans and machines. This methodology involves dissecting problems into smaller parts that are easier to understand and solve. This study delineates a meticulously designed series of CT activities within an introductory computer science course and explores their profound impact on student engagement and problem-solving proficiency. Our findings underscore the pivotal role of hands-on CT practice in augmenting students' ability to decompose problems, recognize patterns, and abstract complexities, and employ algorithms effectively. Notably, this infusion of CT not only cultivates theoretical understanding but also bridges the gap between conceptual knowledge and real-world application through the use of computational tools like Python programming. As CT continues to emerge as a cornerstone skill in diverse domains, this research presents compelling evidence advocating for its integration into introductory courses, laying a robust foundation for students to navigate the evolving technological landscape with enhanced problem-solving capabilities."
"Integrating Computational Thinking, Project-Based Learning, and Cultural Heritage for Rural Middle School Students","Dunbar, Kyle M. and Coenraad, Merijke and Iwatani, Emi",2025,"Based on work in an ongoing research-practice partnership, we share teacher-designed project-based learning (PBL) units that sought to integrate Appalachian heritage and CT. We offer reflections on the lessons learned in the design and implementation of PBL units in addition to making recommendations for future PBL units that integrate CT and cultural heritage. This work has implications for improving computing education in rural contexts and in PBL settings."
Integrating Making and Computational Thinking in Early Childhood Education: Preliminary Outcomes from a Teacher Trainer Workshop on Designing an Intervention,"Bahr, Tobias",2024,"In the context of educational equity and social participation in the modern technological world, future skills, including problem-solving, are increasingly important for children. Consequently, various projects have developed learning opportunities in Making and Computational Thinking to foster these skills in early childhood education (ECE). However, several literature reviews highlight a research gap concerning students' process-related competencies and the actual implementation of these learning opportunities by educators in kindergarten. In this context, an intervention that will be taught by kindergarten teachers was designed. This article reports on the design of an intervention incorporating Making and Computational Thinking for students aged 5 and 6, developed during a workshop with 12 experts in ECE, Making, and Computing Education."
Integration of computational thinking into English language arts,"Jacob, Sharin Rawhiya and Parker, Miranda C. and Warschauer, Mark",2022,"This paper describes the development and implementation of a yearlong integrated English Language Arts (ELA) and computational thinking (CT) curriculum that has been adapted to meet the needs of multilingual students. The integration of computational thinking into K-12 literacy instruction has only been examined in a handful of studies, and little is known about how such integration supports the development of CT for multilingual students. We conducted a qualitative case study on curricular implementation in a general education classroom with large numbers of students designated as English learners. Results from detailed field notes revealed that the strategic application of instructional practices was implemented in the service of building on students' existing literacy skills to teach CT concepts and dispositions. The CT and literacy framework put forth in this study can be used as an analytic framework to highlight how instructional strategies mobilize the existing literacy and CT resources of linguistically diverse students. Based on our findings, we discuss recommendations for future integrated ELA-CT curricula."
Interweaving Digital Literacy with Computational Thinking,"George-Reyes, Carlos Enrique and Rocha Estrada, Francisco Javier and Glasserman-Morales, Leonardo David",2021,"In the educational setting, consolidating computational thinking (CT) and digital literacy (DL) as two important skills for 21st- century professionals have become more important than ever. Nonetheless, scientific literature on both topics has rarely focused on developing frames of reference that offer incorporation of the interweaving of these skills. The objective of this document is to analyze and discuss the relationship between CT and DL in a framework where technology is used for education, with the end goal of designing a conceptual proposal that shows its common elements. The result is an initial proposal of interweaving that addresses skills such as abstraction (critical/cognitive-informational-communication), algorithm design (critical/cognitive-informational), and communication as common components, among others. We concluded that this proposal must be discussed, broadened, and considered as an initial reference framework for further analyses and delving into the topic."
Introducing Computational Thinking and Computer Science Instruction to Preservice Science and Math Teachers,"Guo, Meize and Yun, Minji and Israel, Maya",2025,"Despite widespread recognition of the importance of computer science (CS) education and an increased focus on computational thinking (CT) instruction in the U.S., there remains a significant shortage of qualified K-12 CS teachers. Preparing preservice teachers to teach CS is essential for ensuring a sustainable future for CS education. This experience report presents a CT/CS module initiative designed to prepare secondary preservice science and math teachers to teach CT/CS through an instructional methods course that integrates instructional practice within an elementary after-school program. This initiative employs the preservice teacher preparation framework that includes the observe-practice-reflect cycle. Within this framework, the preservice teachers began with incorporating unplugged lessons and then transitioned to robotics to teach CT/CS concepts. In this experience report, we detail the design and implementation of this CT/CS module initiative and share findings that revealed the preservice teachers' increased confidence, adaptations in lesson planning, and the challenges faced in teaching CT/CS. These takeaways aim to inspire and inform other teacher educators and practitioners working to prepare the next generation of CS teachers."
Introducing Computational Thinking at Vocational High Schools,"Simmonds, Jocelyn and Diaz, Constanza and Estay, Carlos",2023,"The Technovation Girls program (TG) is an after-school program, where teams of female school students follow a software ideation process to address one of the UN's Sustainable Development goals. Concretely, they prototype a mobile application which they later pitch to judges. The TG curriculum gives students the tools they need to carry out this challenge, with activities focusing on entrepreneurship, product ideation and pitching, as well as coding. Previous evaluations of this program have focused on student and mentor perceptions and attitudes, collected through surveys, observation, focus groups and interviews. In this paper, we evaluate the effect that the coding part of the TG curriculum has on students' computational thinking skills, specifically in Chile, where the TG curriculum was expanded to a year to account for differences in the school curriculum. Also, in this experience, the TG program was carried out during class hours, and at both single- and mixed-gender vocational high schools. We applied an existing computational thinking test to the 2020 cohort (approx. 1000 students), before and after participating in the program, analyzing the results by school, gender and age. We found a slight improvement in test scores, with a more positive effect in male students."
Investigating the Impact of Programming Activities on Computational Thinking and AI Literacy in Spanish Schools,"Moreno-Le\'{o}n, Jesus and Vasco-Gonz\'{a}lez, Margarita and Rom\'{a}n-Gonz\'{a}lez, Marcos and Robles, Gregorio",2024,"This article presents research conducted within the School of Computational Thinking and Artificial Intelligence (EPCIA in its original form in Spanish) project, an initiative developed by the Spanish Ministry of Education and Vocational Training during the 2020-21 academic year. The study investigated whether it is possible to contribute to the development of students’ computational thinking skills and artificial intelligence (AI) literacy through programming activities using the Scratch language and the Machine Learning for Kids platform. The study involved 133 teachers and more than 2,000 students, from 4th to 8th grade, with representation from 17 of the 19 Spanish regions. Students took a quantitative test on computational thinking and another on AI before and after the intervention, and teachers and students also took a questionnaire at the end of it. The results showed that: i) quantitative tests can be used to reliably measure, in terms of internal consistency, the level of development of computational thinking and AI literacy in the Spanish school population of these ages; ii) it is possible to develop students’ computational thinking skills and raise their level of AI literacy through programming activities; iii) the intervention contributed to demystifying the main prejudices regarding AI; iv) a gender gap was found in relation to previous knowledge and experiences with these topics. Overall, the study concluded that introducing the foundations of AI in primary and secondary education in Spain is appropriate, feasible, and relevant."
KnitxCode: Exploring a Craftsmanship-driven Approach to Computational Thinking,"S\o{}rensen, Marie-Louise Stisen Kjerstein and Fog, Bjarke Vognstrup and Musaeus, Line Have and Petersen, Marianne Graves",2022,"In recent years, computational thinking (CT) has focused on how children and citizens develop basic computing skills which empower them to participate in a digitised society and broaden participation and engagement with CT. We present the exploration of a craftsmanship-driven approach to engage people in CT. To explore this approach a team of knitters, a computer scientist and a computing education expert iteratively designed the KnitxCode workshop. KnitxCode utilises knitting in combination with CT concepts as the foundation for the activities. The workshop was evaluated by 12 participants with no programming experience and with knitting experience ranging from 2-25 years (M = 6). From the evaluation we found that the craftsmanship-driven approach seemed to provide the participants with confidence to learning CT, as shared concepts and practices between knitting and computing supported transitioning from knitting craftsmanship to computing and in this way served to demystify computing."
Learning Computational Thinking Efficiently: How Parsons Programming Puzzles within Scratch Might Help,"Bender, Jeff and Zhao, Bingpu and Dziena, Alex and Kaiser, Gail",2022,"Using a design thinking approach, we surveyed and interviewed grade 6-9 teachers on their experience with Scratch and Parsons Programming Puzzles (PPP). The results lead us to extend Scratch with gameful PPP functionality focused on individual computational thinking (CT) concepts. In this paper, we vary elements of PPPs presented to 624 adult learners to identify those yielding manageable cognitive load (CL), and maximum CT motivation and learning efficiency, for a general populace. Findings indicate PPPs with feedback and without distractors limit CL, those with feedback produce highest CT motivation, and those with an isolated block palette and without distractors produce highest CT learning efficiency. We analyze study data across nine conditions to offer insight to those developing PPP systems with the aim to advance equitable CT education for all."
Modeling of the System for Computational Thinking Automatic Assessment,"Masiulionyte-Dagiene, Vaida",2023,"The aim of the doctoral thesis is to model an automated computational thinking (CT) assessment system based on solving processes of the interactive tasks. Currently, a literature review and analysis has been carried out, which has shown that among current CT assessment tools most popular ones still remain different types of tests. A study, comparing the two computational thinking assessment tests has been conducted and it has been observed that using only the tests causes data loss as tests do not collect information on the solution processes. An experiment was carried out to collect and analyze action information while solving the task and using this data to extract the possible different solution methods of an interactive task."
Multiple Programming Languages for Improving Computational Thinking in CS1,"Lee, Dongeun and Hu, Kaoning and El Ariss, Omar and Kwon, Kibum",2023,"Computational thinking can be deemed as thinking in algorithmic way, with which one can transpose given problems into computer algorithms. Since computational thinking requires abstract reasoning, it should not depend on particular programming languages. Unfortunately, introductory programming courses (CS1) often give students false impression that their goals are to teach a particular programming language. This study shares the design of new pedagogy for CS1 that removes dependency on a particular language and promotes computational thinking by teaching multiple programming languages simultaneously. Specifically, chosen programming languages range from low-level to high-level to expose students to different levels of abstraction from the details of computer architecture. Initial student survey responses from both trial and control groups show that there are significant improvements for the trial groups."
Observing Computational Thinking Skills of Kindergarten Children,"Meyer-Baron, Larissa and Stieger, Ramona and Waldvogel, Bettina and Schumann, Nicole and Ruedisueli, Cornelia and Mayr, Franziska",2022,"Computational Thinking skills along with reading, writing, and calculating skills are basic skills for children’s future. Computational Thinking has much in common with problem-solving and creative thinking in general. With regard to Karl Popper ""all life is problem-solving"" [26], this contribution focuses on the common features of problem-solving and unplugged Computational Thinking, by using a special set of Computational Thinking tasks (INGA-Box). Choosing a mix of deductive and inductive approach, a classification scheme for observing the development of Computational Thinking in kindergarten was developed and evaluated with first datasets."
On Teaching Novices Computational Thinking by Utilizing Large Language Models Within Assessments,"Hassan, Mohammed and Chen, Yuxuan and Denny, Paul and Zilles, Craig",2025,"Novice programmers often struggle to develop computational thinking (CT) skills in introductory programming courses. This study investigates the use of Large Language Models (LLMs) to provide scalable, strategy-driven feedback to teach CT. Through think-aloud interviews with 17 students solving code comprehension and writing tasks, we found that LLMs effectively guided decomposition and program development tool usage. Challenges included students seeking direct answers or pasting feedback without considering suggested strategies. We discuss how instructors should integrate LLMs into assessments to support students' learning of CT."
OntoCnE &amp; Neuroeducation Guidelines: An approach to developing Computational Thinking,"Ara\'{u}jo, Cristiana and Henriques, Pedro Rangel and Cerqueira, Jo\~{a}o Jos\'{e}",2025,"Computer Programming (CP) is difficult to teach and learn. Many students who enroll in CP courses have difficulty learning to program, as they have deficits in problem-solving skills and are unable to understand abstract programming concepts. Some studies also state that teaching methods are often not the most appropriate as they are not personalized to each student’s needs and do not complement their learning styles. We believe that Computational Thinking (CT) can help alleviate the difficulties in learning to program, especially if it is developed from an early age. However, it is also crucial that teachers use effective methods to help their students develop CT skills. There are several Learning Resources (LR) (digital or paper format) to develop CT skills, however, we argue that Neuroeducation can contribute to improving the effectiveness of these LR in the teaching and learning process. The evidence about the brain’s learning process can be transformed into principles applicable in Education (Neuroeducation). To understand how we could train CT at various levels of education we built an ontology, OntoCnE, that describes the CT and CP domains. OntoCnE is composed of 3 layers that define: how to develop CT; which concepts should be taught at each level of education; and appropriate training materials. This paper aims to present a CT development approach based on this ontology together with Neuroeducation guidelines. The result of our research is the fourth layer for OntoCnE, which defines the Neuroeducation guidelines to characterize the materials. To illustrate our proposal, we will use LR PathIt as a case study. This approach can contribute to innovative and more efficient training of CT."
Professional Development in Computational Thinking: A Systematic Literature Review,"Espinal, Alejandro and Vieira, Camilo and Magana, Alejandra J.",2024,"This paper presents a systematic literature review of professional development programs in computational thinking (CT). CT has emerged as an essential set of skills that everyone should develop to participate in a global society. However, there were no pre-service or in-service teacher programs to integrate CT into the K–12 classrooms until very recently. Thus, it is important to identify how educators and researchers address the challenges to prepare the next generation of students and what gaps persist in the current literature. We review existing work in this field from two perspectives: First, we analyze the learning outcomes, assessment methods, pedagogical approaches, and pedagogical tools used in the professional development programs in CT. Second, we examine how these programs assess the teachers’ knowledge and skills as outcomes. We used the technological pedagogical and content knowledge (TPACK) framework to characterize existing literature and identify possible gaps in the preparation of pre-service and in-service teachers in CT. Our results suggest that (1) existing evidence is limited to developed countries; (2) many studies are only focusing on teachers understanding the concepts but do not explore how the participants evaluate or create learning activities; (3) no studies look into classroom observations as part of the program, which limits our understanding to how these programs work; and (4) most programs use block-based programming languages as the tool to develop student CT. While block-based programming languages are used for introductory training programs, students are often expected to transfer their learning to more professional programming languages."
Promoting Computational Thinking in Elementary School: A Narrative-Centered Learning Approach,"Boulden, Danielle and Smith, Andy and Cully, Kimkinyona and Houchins, Jennifer and Elsayed, Rasha and Hubbard Cheuoua, Aleata and Minogue, James and Oliver, Kevin and Ringstaff, Cathy and Mott, Bradford",2021,"One of the most efficient ways for elementary school students to gain exposure to computational thinking is when it is integrated into other disciplinary areas; however, elementary school teachers often lack the necessary resources to do this effectively. By leveraging the motivation force of narrative to engage students and the scaffolding affordances of block-based programming to support students, computationally-rich narrative-centered learning offers promise to address this need. In this work, we review design principles from prior work for engaging elementary students in computational thinking as well as results from initial pilot studies to investigate how computationally-rich narrative-centered learning in the context of science problem solving can support the integration of computational thinking into other disciplinary areas."
Resources for Computational Thinking: Co-designing with Teachers,"Mills, Kelly and Angevine, Colin and Weisgrau, Josh",2020,"Computational thinking (CT) has become a recent policy agenda in order for students to develop interest and foundational understanding in computing and preparation for an increasingly technological workforce. In order to integrate CT into K-12 education, teachers need professional support. The field has faced common challenges developing professional learning experiences and resources that facilitate the integration of computational thinking in authentic, equitable and sustainable ways. We have worked with a cohort of over eighty teachers from around the United States to co-design and pilot pedagogical resources for computational thinking. In this poster, we summarize our co-design process with teachers and share the resources we developed for computational thinking integration."
Scaling Up Collaborative Dialogue Analysis: An AI-driven Approach to Understanding Dialogue Patterns in Computational Thinking Education,"Yin, Stella Xin and Liu, Zhengyuan and Goh, Dion Hoe-Lian and Quek, Choon Lang and Chen, Nancy F.",2025,"Pair programming is a collaborative activity that enhances students’ computational thinking (CT) skills. Analyzing students’ interactions during pair programming provides valuable insights into effective learning. However, interpreting classroom dialogues is a challenging and complex task. Due to the simultaneous interaction between interlocutors and other ambient noise in collaborative learning contexts, previous work heavily relied on manual transcription and coding, which is labor-intensive and time-consuming. Recent advancements in speech and language processing offer promising opportunities to automate and scale up dialogue analysis. Besides, previous work mainly focused on task-related interactions, with little attention to social interactions. To address these gaps, we conducted a four-week CT course with 26 fifth-grade primary school students. We recorded their discussions, transcribed them with speech processing models, and developed a coding scheme and applied LLMs for annotation. Our AI-driven pipeline effectively analyzed classroom recordings with high accuracy and efficiency. After identifying the dialogue patterns, we investigated the relationships between these patterns and CT performance. Four clusters of dialogue patterns have been identified: Inquiry, Constructive Collaboration, Disengagement, and Disputation. We observed that Inquiry and Constructive Collaboration patterns were positively related to students’ CT skills, while Disengagement and Disputation patterns were associated with lower CT performance. This study contributes to the understanding of how dialogue patterns relate to CT performance and provides implications for both research and educational practice in CT learning."
Strengthening Computational Thinking within Upper Elementary Classrooms: A Strategy for Broadening Participation in Computer Science,"Sayler, Ben and Anderson, Ann and Caffee, Hannah and Carroll, Becky and Hammel, Koreen and Her Many Horses, Ian and Kertzman, Deann and Lange, Pamela and Myers, Rebecca and Reiner, Nicol and Uhre-Balk, Nicole and Webber, Kimberly",2024,"This paper describes a research-practice partnership (RPP) in western South Dakota involving twenty 4th and 5th grade teachers and a support team of university researchers and K-12 learning specialists. For three years, the RPP has been exploring ways to strengthen computational thinking within elementary math and science instruction, attending to policy considerations and the local education landscape. The RPP is motivated in part by the hypothesis that a larger, more diverse group of students will choose to enroll in computer science courses in high school if they gain familiarity and confidence related to computational concepts at earlier grades. Feedback from participating teachers along with student attitude and problem-solving data suggest this is a promising approach."
Study on Mode of Cultivating Computational Thinking in Online Teaching of Information Technology:A Quasi-Experimental Study,"Yang, Hairu and Liang, Zhou and Ma, Mingyue and Zhang, Xiaoyu and Fu, Yan and Zhang, Yongmei",2024,"With the development of the digital age, online teaching and learning is becoming more widespread in schools around the world. In the online teaching environment, the teaching mode of the course is an important element that receives attention in education and teaching. The online teaching mode based on the cultivation of computational thinking can improve students' learning interest and cultivate their innovative thinking ability. However, the author found through educational internship that there are problems such as single teaching activities, lack of teacher-student interaction, poor cooperative learning, and short independent learning time in high school information technology classrooms, which lead to low computational thinking ability and are not conducive to the development of students' innovative ability. The development of students' computational thinking ability is a requirement put forward by the high school information technology curriculum to secondary school students, and the improvement of computational thinking can help students adapt to the future society and meet the demand of future innovative talents. Therefore, this study takes high school students as the research object, under the guidance of constructivism and cognitivism theories, adopts survey research, experimental research and other research methods to construct and verify the online teaching mode based on the cultivation of computational thinking in high school information technology courses. The results of the study show that the online teaching mode based on the development of computational thinking can effectively improve students' algorithmic, evaluation, decomposition, abstraction and generalization thinking abilities, and thus enhance the online learning effect."
Supporting Teacher Understanding of Computational Thinking Integration into Early Elementary Curricula,"Sherwood, Heather and Kaiser, Alice and Ferguson, Camille and Negron, Anthony and Ferrer, Ray and Labonte, Don",2024,"The recent emphasis on computational thinking (CT) integration across disciplines in elementary education nationwide is important to ensure that students are well-equipped to meet the demands of the data-driven workforce. However, this requirement poses major challenges to early elementary teachers who are faced with little direction in terms of how best to implement and assess their young student's application of these new practices.This project engaged researchers, professional development (PD) providers, and K-2 teachers to develop and design a hybrid PD experience to support teachers in a process of learning about and identifying the use of CT skills and strategies in their students' work. The hybrid PD approach utilized a combination of instructional coaching, both face-to-face and through an online Community of Practice. Researchers used a mixed-methods design to measure teachers' change over time in their understanding of how to identify emergent computational thinking in their students' work process. Data collection methods included teacher focus groups and interviews, classroom observations, and teacher pre- and post-surveys.Preliminary findings showed an increase in teachers' understanding of CT and confidence in engaging their students in CT-integrated lessons. Teachers reported that the combination of in-person PD and online Community of Practice helped them prepare to bring CT into their classroom and cited placing more of a distinct focus on teaching students the process of CT rather than just using CT vocabulary. Teachers also referenced success in evaluating their students' application of CT skills and concepts by using informal and formative assessment strategies that focus on evidence of student understanding rather than assessing CT vocabulary."
Teacher Education and Computational Thinking: Measuring Pre-service Teacher Conceptions and Attitudes,"Yadav, Aman and Caeli, Elisa Nadire and Ocak, Ceren and Macann, Victoria",2022,"In recent years, there has been a growing awareness of the need for computer science education opportunities and particularly for engaging students in computational thinking ideas and practices to help them understand how computing influences our world. At its core, computational thinking (CT) is seen as understanding how computational practices (such as, abstraction) and tools (such as modeling software) can be used to explore phenomena, solve problems, and influence our lives and society. The push for CT integration has called for preparing future educators to learn CT practices and tools through stand-alone courses and within the context of disciplinary pedagogy/methods courses. However, there are few instruments that measure pre-service teachers' attitudes towards computational thinking and its role in formal schooling. In this study, we developed and validated an instrument to measure pre-service teachers' attitudes towards CT, its role in students' lives, and their own self-efficacy to incorporate CT into their teaching. We report results from a principal components factor analysis on survey responses from 260 pre-service teachers to identify patterns and reduce the number of dimensions of comparison in the analysis. We discuss how pre-service teacher conceptions have implications for preparing future teachers to integrate computational thinking into their instruction."
Teacher Education to Integrate Computational Thinking into Elementary Science: A Design-Based Research Study,"Killen, Heather and Coenraad, Merijke and Byrne, Virginia and Cabrera, Lautaro and Mills, Kelly and Ketelhut, Diane Jass and Plane, Jandelyn D.",2023,"Computational thinking (CT) is playing an increasingly relevant role within disciplinary teaching in elementary school, particularly in science. However, many teachers are unfamiliar with CT, either because their education occurred before the popularization of CT or because CT instruction was not included in their pre-service coursework. For these teachers, CT professional development (PD) becomes a primary mechanism to close their CT knowledge gap. While CT PD has demonstrated success at increasing teacher's CT understanding, researchers have reported varied outcomes in supporting teachers to write CT-integrated lesson plans. To explore how we might support teachers to integrate CT into elementary science, we employed design-based research (DBR) in a dual-track design of in-class CT instruction for pre-service undergraduates within an elementary science methods class paired with a collaborative, multi-month PD opportunity for pre- and in-service teachers. In this article, we reflect on our 5-year period of DBR and present our design insights and implications for CT instruction and curriculum design from each iteration. Our findings on best practices will inform both teacher educators and PD providers within CT education. Our work will also be of interest to researchers considering DBR for technology-based educational projects."
TeachVR: An Immersive Virtual Reality Framework for Computational Thinking based on Student Preferences,"Wee, Chyanna and Wang, Lillian Yee Kiaw and Ong, Huey Fang",2025,"This study presents the development of a student-centric framework for utilizing virtual reality (VR) technologies in education, specifically focusing on enhancing computational thinking skills. While numerous frameworks exist in this domain, they often lack consideration of student preferences, which are integral for fostering learner autonomy. Our proposed framework, with components developed from the constructivist learning theory, emphasises creating knowledge through interaction with the environment, focusing on autonomy, mastery, and purpose as drivers of intrinsic outcomes. Through a survey administered to hundred and fifty-seven participants, we sought to identify student-preferred strategies for learning computational thinking skills via VR interventions. Results highlighted key challenges students face when working on computational tasks are related to algorithmic and abstraction thinking. To ease the aforementioned challenges, our findings suggest a preference among students for situated-based learning approaches within VR environments. Additionally, participants recognized the importance of motivational outcomes in improving autonomy and mastery within VR-based learning tasks. Students also preferred tasks that enhanced self-efficacy, contributing to a greater sense of purpose in their learning endeavours. Overall, this investigation sets a foundation for more student-centric, constructivist, and intrinsically-based VR frameworks in education."
The Association between Computational Thinking and Mental Models in Talented Children (Doctoral Consortium),"Kunz, Katrin",2024,"This doctoral research explores the link between computational thinking (CT) and mental models in talented children, addressing a gap in empirical studies on effects of computer science interventions. The research employs a mixed methods approach, utilizing randomized controlled field studies and interviews with primary school students attending computational thinking courses. Thus, two new computational thinking interventions have been developed and will be evaluated by a pilot, efficacy, and effectiveness study including either a wait-list or treated control group. The test instrument measuring mental models will first be employed in semi-structured interviews with talented children attending these computational thinking courses and then subsequently implemented in randomized controlled field trials to compare the effects of the courses on computational thinking abilities and the development of stable and viable mental models."
The Construction and Application of A Blended Contextual Teaching Model for Computational Thinking Development,"Yang, Hairu and Shao, Yanru and Liu, Yuqi and Dong, Jiamin and Li, Qiuhong and Chen, Yipan",2024,"Computational thinking has become one of the key literacies necessary for talents in the digital and intelligent era of the 21st century. In the current educational environment, the content of the curriculum that is detached from reality and the fragmented knowledge have brought great difficulties to the cultivation of students' computational thinking ability. Contextual teaching can connect knowledge with reality. Through the e-learning platform combined with real-life scenarios to build a specific real situation, which can drive students to carry out rich thinking activities. Therefore, this study designed a blended contextual teaching model for the development of computational thinking based on contextual learning theory and constructivist learning theory. It was applied to the teaching of high school information technology courses, and the effectiveness of the model was verified by investigating and analyzing whether there were changes in students' academic performance and computational thinking ability under the blended contextual teaching model through the questionnaire survey method and the experimental research method. The results of the study show that the application of the model can effectively improve students' academic performance and computational thinking ability, which provides an effective reference and reference for future educational teaching practice."
The Development of Computational Thinking in Computing Higher Education,"Moreira Oliveira, Carolina",2022,"Curriculum guidelines for Computer Science undergraduate courses from different institutions recognize computational thinking as a fundamental skill that all students must exercise in Computer Science courses. Unfortunately, the guidelines do not make it clear when and how these skills should be exercised. The literature recognizes the importance and relevance of computational thinking. However, there is still little evidence around which aspects should be considered to design activities to support the development of computational thinking. To address this problem, my research aims to investigate how to design and conduct activities to promote computational thinking in Computer Science courses. The expected result is to produce an approach to assist the design and conduct of computational thinking learning activities in Computer Science courses."
The Effectiveness of Teaching Approaches in Computational Thinking Education: A Meta-Analysis,"Chen, Yunshan and Wang, Yining and Li, Yanyan",2023,"This meta-analysis examined research on the effects of different teaching approaches on students’ computational thinking (CT) from 2010 to 2022. A total of 35 articles met inclusion criteria and were included in the final analysis with a total of 49 independent effect sizes. The meta-analysis results showed that the current K-12 teaching has a moderate positive impact on the development of students' computational thinking (g=0.548). Pair programming, unplugged activities, and project-based learning have the most significant effects, which are more helpful in cultivating students’ computational thinking. Moreover, we analyzed the impact of moderator variables on the relationship between K-12 teaching and computational thinking. Findings revealed that the effects of CT education were more substantial (a) for middle school students than for primary school students, (b) in interdisciplinary courses than in computer science courses, (c) with collaborative learning activities than with individual learning activities. Based on this, we suggest that paired programming, unplugged activities, and project-based learning, which are based on collaborative learning, should be used more for CT education. In addition, schools should develop interdisciplinary courses to promote computational thinking migration in different disciplines."
The Influence of CodeCombat on Computational Thinking in Python Programming Learning at Primary School,"Choi, Wan Chong and Choi, Iek Chong",2024,"In an age of rapid technological development, primary schools now teach programming to young students, focusing on developing their computational thinking, problem-solving, and ability to use computers to create solutions. However, fostering computational thinking skills in younger students was a challenging task. The serious game CodeCombat has become a potential resource for instructing young students in primary schools on basic programming principles using Python.This study delved into the role of the serious game CodeCombat in advancing computational thinking competencies among primary school students undertaking Python in Macao. Using a quasi-experimental pretest-posttest approach, we examined 49 grade-one students over a two-week Python programming course facilitated by CodeCombat. The Computational Thinking Scale (CTS), encompassing Creativity, Cooperativity, Algorithmic Thinking, Problem Solving, and Critical Thinking, was employed to measure shifts in computational thinking before and after the teaching experiment.Data analysis through paired-sample t-test highlighted notable progress in computational thinking skills, with marked improvements specifically in Creativity, Critical Thinking, Algorithmic Thinking, and Problem Solving. However, Cooperativity did not exhibit the same upward trend, implying that CodeCombat's impact was more pronounced on solitary cognitive capabilities than collaborative skills. Moreover, the correlation between different dimensions indicated that these computational thinking skills were mutually reinforcing, suggesting that enhancing one might contribute to the development of others. The findings endorsed that game-based learning is effective in programming education and recommended integrating CodeCombat to improve computational thinking in learning Python programming in primary school."
The Influence of Problem Solving Based Practice on Pupils' Computational Thinking,"Liu, Xiaoying and Cong, Longjie and Xu, Jihong",2023,"The cultivation of computing thinking in primary school has attracted the attention of all countries in the world. Based on the fifth grade information technology curriculum of primary school, this paper constructs a practice link based on problem solving, namely, five main links: observe, write, paste or draw, attempt or create,share. It also verifies whether the practice link is conducive to promoting the development of students' computing thinking. The results show that, the practice link based on problem solving can not only promote the improvement of algorithm expression ability and programming ability of primary school students, but also exercise their ability to solve problems, establish and develop computing thinking. This practice link can provide feasible strategies for information technology courses in primary schools, and provide reference for the research and practice of computing thinking cultivation of primary school students in China."
The Integration of Computational Thinking and Making in the Classroom,"Magda, David and Gardner-McCune, Christina and Jimenez, Yerika and Chu, Sharon and Kulkarni, Abhishek",2024,"Maker-based learning and Computational Thinking (CT) have increased in popularity in formal educational settings over the past decade. Particularly, the combination of CT and making seem to hold promise for providing opportunities for students to learn and use computing concepts outside of computing courses. This paper presents findings from a two year study of the integration of computational making into 5th and 6th grade science classrooms. Students participated in computational making interventions in which they programmed Arduino microcontrollers to create scientific models of concepts that aimed to help them engage with the science content while learning CT and making skills. In this paper, we explore the differences between the desired computing learning progressions, students' performance on assessments, and perceptions of computer science to answer: To what extent are middle school students able to learn computing through computing integrated science curriculum? We observed that the programming concepts taught were largely dependent on the needs of the science and making project. Our findings suggest that while students had opportunities to learn and use programming concepts, their performance on assessments was between 15% and 78% correct for conceptual and applied questions and their programming self-efficacy and their perceptions of computer science were lower than desired. We discuss the implications of these findings and the factors that impact the integration of CT in core disciplines and the challenges this presents as we aim to use integration approaches to effectively teach computing outside of computing courses and to broaden participation in computing."
The Landscape of Computational Thinking Problems for Practice and Assessment,"Pel\'{a}nek, Radek and Effenberger, Tom\'{a}\v{s}",2023,"To provide practice and assessment of computational thinking, we need specific problems students can solve. There are many such problems, but they are hard to find. Learning environments and assessments often use only specific types of problems and thus do not cover computational thinking in its whole scope. We provide an extensive catalog of well-structured computational thinking problem sets together with a systematic encoding of their features. Based on this encoding, we propose a four-level taxonomy that provides an organization of a wide variety of problems. The catalog, taxonomy, and problem features are useful for content authors, designers of learning environments, and researchers studying computational thinking."
The Students' Perspective on Computational Thinking through Flipped Classroom in K-12 Programming Course,"Choi, Wan Chong and Chang, Chi In",2024,"Programming integration into K-12 curricula has become increasingly important in the rapidly evolving educational landscape. Recognizing the need to develop computational thinking among young learners, this study investigated the impact of the flipped classroom approach on computational thinking in K-12 programming courses in Macao, focusing on primary school students' experiences with block-based programmable hardware. Employing a mixed methods research design, it combined quantitative and qualitative analyses to examine how flipped classroom activities—centered around student engagement with material through e-books, videos, and interactive classroom tasks—affected students' understanding and application of computational concepts, practices, and perspectives. Quantitative data were collected using the Programming Computational Thinking Scale (PCTS), and qualitative insights were gathered through semi-structured interviews. The results indicated significant improvements in students' computational concepts and practices, attributed to the advantages of self-study and a stratified approach to task complexity. However, advancements in computational perspectives were less pronounced, highlighting the need for more opportunities for students to refine their presentation skills. The study concluded that the flipped classroom approach, especially with tools like mBlock and Codey-Rocky, effectively nurtured computational thinking in primary school programming courses. It underscored the importance of innovative teaching methods in enhancing students' ability to apply programming concepts in problem-solving and suggested areas for further improvement in educational practices."
Towards Computing Education for Lifelong Learners: Exploring Computational Thinking Unplugged Approaches,"Agbo, Friday Joseph and Everetts, Connor",2024,"Older adults are underrepresented in computing education; broadening participation in computing has remained predominantly at K-12 and college settings. Yet, the population of older adults is increasing across many regions. Strategies for broadening participation in computing education for adult learners have been under-explored. This poster reports our effort towards broadening participation in computing for adult learners by exploring how computational thinking problem-oriented unplugged activities might help to gently introduce older adults into computing education. Being an exploratory study, data was collected using a mixed method approach. This report presents preliminary findings that suggest the potential benefits of computing education for older adults, including social collaboration and demonstration of computational thinking practices that could help them to remain active while aging. Moreover, future research direction in this regard is also discussed."
Towards the Unification of Computational Thinking and EUDability: Two Cases from Healthcare,"Barricelli, Barbara Rita and Fogli, Daniela and Gargioni, Luigi and Locoro, Angela and Valtolina, Stefano",2024,"This paper presents a study about the mapping of the EUDability of End-User Development (EUD) tools with the Computational Thinking (CT) skills of users. This mapping provides an approach to evaluate the suitability of a EUD environment in supporting people performing their daily work while managing and exploiting EUD tools. EUDability is a construct encompassing different dimensions that need to be assessed through a careful scrutiny by human-computer interaction experts, while CT skills should mirror those dimensions from the point of view of assessing the level of ability of users in managing problems with a computational thinking attitude. Moving from the healthcare domain, we present two cases: a tool for geriatric professionals supporting them in the preparation of cognitive exercises for elderly patients; and a tool for pharmacists, which empowers them to create robot programs related to the preparation of personalized medications. These cases have been exploited to show how to unify the EUDability assessment with the CT skills assessment. In particular, the application of the EUDability evaluation method for each tool, as well as the administration of the Computational Thinking Scale to domain experts are shown. The results of the two assessments are reported and discussed, together with the limitations of the present study. The results show the goodness of fit of the proposed EUD tools in the healthcare domain."
Use of Computational Thinking Skills when solving Bebras Tasks: a Think-aloud Study,"de Jong, Imke and Sichterman, Bo and Jeuring, Johan",2024,"In this study we examine the use of CT skills when solving Bebras tasks. Bebras tasks are logical puzzles created to introduce, practice and sometimes assess Computational Thinking (CT) skills. We use the think-aloud method to investigate the problem-solving process of participants with advanced CT skills. The contribution of this study is three-fold. First, the study examines how the use of CT skills manifests itself in the problem-solving process. By examining the thought process of participants, our study provides a detailed operationalization of CT skill definitions that could be used in subsequent studies to investigate the use of the skills. Secondly, the study provides a validation of the classification of a selection of Bebras tasks. Our results show that the skills assigned to these Bebras are indeed the skills most often used by the problem solvers while solving the tasks. Finally, even though the skills are used, the results also show that this does not always translate into answering these puzzles correctly. Based on the results we therefore conclude that, without looking at the problem-solving process, the tasks may not be suitable for the assessment of CT skills."
Using Computational Thinking to Demystify Computer Science for Elementary Teachers,"Levitt, Diane and Garfus-Knowles, Dylana and Khuu, Wyman and Siddappa, Sara",2024,"The computer science education research community has thought deeply about how students learn computational thinking (CT) as it relates to other domains of computer science (CS; e.g. programming) and core content areas (STEM, humanities), but less work has examined the role of CT in pathways to computer science for K-5 teachers. This panel examines the experiences of practitioners - educators, administrators, and curriculum designers--who have both experienced and supported others in incorporating CT in elementary school settings as a pathway to or component of computer science education. All panelists have worked with teachers not previously trained to teach CS and have encountered the many opportunities and difficulties of bringing CS to in-service teachers. They will reflect on the multiple ways educators grapple with CT: as an entry point to computer science, as a way to enrich core disciplines, and as a way to support equitable practice - for example, several of the panelists have experiences leveraging CT and other domains of CS to support the expression and development of emergent bilingual students. The panel will explore ways in which CT and its associated language and strategies for problem solving may provide a particularly helpful onramp to CS generally, including integration with other disciplines and with language about academic skills more generally."
Using Computational Thinking to Learn Creative Writing and Performance Arts: Summer Experiences of Story Creation Projects,"Torres Castillo, Ruth and Valdez, Tomas and Pontelli, Enrico and Gonzalez, Horacio and Nevarez, Erick and Cota, Raena",2024,"In our modern society, technology has profoundly reshaped various aspects of our lives, influencing the way we work, communicate, and interact. This raises a fundamental question: Is the current K-12 education system adequately preparing students for success in this technology-driven era, where innovation and problem-solving skills are essential? A recent study investigated this inquiry. The goal was to integrate Computational Thinking (CT) into the domains of Creative Writing and Creative Media and measure its impacts. This poster describes the design and refinement of summer camp experiences in which predominantly Hispanic female students participated in hands-on CT-based learning to create their own creative stories and films. Educational outcomes were evident through increased student engagement, enhanced collaboration, and improved problem-solving skills, underscoring the intervention's advantages. Furthermore, the researchers gained transforming insights, recognizing the versatility of CT across domains. Camp participants experienced a shift in perspective, with a greater interest in vocations and domains connected to computing. We share lessons learned from these summer camps in the hopes that they will inform other researchers and practitioners who are interested in designing and deploying similar experiences. In summary, the study outlines a trajectory where students and educators skillfully navigate the complexities of contemporary paradigms"
Using Problem-Driven Learning to Teach Computational Thinking in CS1,"Chang, Rocky K. C.",2024,"This experience report describes the author's use of the classic man-cabbage-goat-wolf (MCGW) riddle to teach the main elements of computational thinking in CS1. Instead of teaching each computational thinking element individually, in the process of solving the MCGW problem the students are able to understand the process of abstracting a problem to a representation that can be understood by computer, finding a suitable algorithm to solve the abstracted problem, and decomposing the problem into different logical and more manageable parts. The survey responses from two recent classes clearly validate the effectiveness of this problem-driven approach even for a large class of very diverse backgrounds."
Validation of a Bebras-Based Test to Assess Computational Thinking Abilities in First-Year College Students,"Meza, Federico and V\'{a}squez, Andrea and San Mart\'{\i}n, Daniel",2024,"The lack of clarity about the definition of Computational Thinking (CT) undermines its assessment and the formulation of effective learning strategies for its development. We propose an assessment tool in Spanish, designed by carefully selecting Bebras tasks, to measure four specific CT skills in first-year university students with no prior programming experience. The test was validated with a sample of 980 students from a Latin American university. We found a high, positive correlation between test results and Math test results from the National University Selection System, and a medium, positive correlation between test results and grades from the midterm exam in a Programming course. An acceptable level of internal consistency was found (Cronbach's alpha=0.70). We examined the validity of the test using Classical Test Theory. One question showed poor discrimination potential. Its elimination from the test increased the internal consistency, so we propose to replace it."
